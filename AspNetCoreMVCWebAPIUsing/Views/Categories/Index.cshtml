@{
    ViewData["Title"] = "Kategori Yönetimi";
}

<h1>Kategori Yönetimi</h1>

<!-- Button trigger modal -->
<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
    Yeni Kayıt
</button>

<table class="table">
    <tr>
        <th>Id</th>
        <th>Resim</th>
        <th>Kategori Adı</th>
        <th>Durum</th>
        <th></th>
    </tr>
    <tbody id="list"></tbody>
</table>

<input type="hidden" id="Id" />
<input type="hidden" id="ImageName" />


<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Modal title</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <table>
                    <tr>
                        <td>Kategori Adı</td>
                        <td>
                            <input type="text" id="Name" value="" class="form-control" />
                        </td>
                    </tr>
                    <tr>
                        <td>Resim</td>
                        <td>
                            <input type="file" name="Image" class="form-control" />
                            <span id="Image"></span>
                        </td>
                    </tr>
                    <tr>
                        <td>Durum</td>
                        <td>
                            <input type="checkbox" id="IsActive" />
                            <label for="IsActive">Aktif</label>
                            <span id="Image"></span>
                        </td>
                    </tr>
                    <tr>
                        <td>Açıklama</td>
                        <td>
                            <textarea id="Description" rows="5" class="form-control"></textarea>
                        </td>
                    </tr>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary me-auto" data-bs-dismiss="modal">Vazgeç</button>
                <input type="submit" value="Ekle" class="btn btn-primary" onclick="Ekle()" />
                <input type="submit" value="Güncelle" class="btn btn-success" onclick="Guncelle()" id="btnGuncelle" disabled />
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        // Ekrandaki div elementini seç
        var loader = `<div class="spinner-border" role="status"><span class="visually-hidden">Yükleniyor...</span></div>`
        let div = document.getElementById('list');
        div.innerHTML = loader;
        function GetAll() {
            fetch('https://localhost:7116/api/Categories')
                .then(response => response.json()) // JSON olarak dönüştür
                .then(data => {
                    // console.log(data)
                    let result = ``;
                    // Ürünleri div içine yazdır
                    data.forEach(item => {
                        result += `<tr>
                                <td>${item.id}</td>
                                <td><a href="/Home/itemDetail/${item.id}"><img src="https://localhost:7116/Img/${item.image}" alt="" height="34" /></a></td>
                                <td>${item.name}</td>
                                <td>${item.isActive}</td>
                                <td>
                                     <input type="button" value="Düzenle" class="btn btn-sm btn-primary" onclick="Edit(${item.id})" data-bs-toggle="modal" data-bs-target="#exampleModal">
                                    <input type="button" value="Sil" class="btn btn-sm btn-danger" onclick="Delete(${item.id})">
                                </td>
                                </tr>`;
                        div.innerHTML = result
                    });
                })
                .catch(error => {
                    // Hata olursa konsola yazdır
                    console.error(error);
                });
        }

        GetAll();

        function Ekle() {
            if (!document.getElementById('Name').value) {
                alert("Kategori Adı Boş Bırakılamaz!")
                return false;
            }
            // file upload
            const formData = new FormData();
            const fileField = document.querySelector('input[type="file"]');

            //formData.append("username", "abc123");
            formData.append("formFile", fileField.files[0]);

            fetch('https://localhost:7116/api/Categories/', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    Name: document.getElementById('Name').value,
                    IsActive: document.getElementById('IsActive').checked,
                    Description: document.getElementById('Description').value,
                    Image: formData.get('formFile').name //document.getElementsByName('Image')[0].value
                })
            })
                .then((response) => {
                    if (response.ok) {
                        upload(formData);
                        location.reload()
                        // return response.json(); // Başarılı ise JSON verisini alın
                    } else {
                        throw new Error('İstek başarısız oldu.'); // Hata durumunda hata fırlatın
                    }
                })
                // .then((data) => {
                //     console.log('İşlem başarılı:', data); // İşlem başarılıysa veriyi konsola yazdırın
                //     GetAll();
                // })
                .catch((error) => {
                    console.error('Hata:', error); // Hata durumunda hata mesajını konsola yazdırın
                });

        }

        function Edit(id) {
            fetch('https://localhost:7116/api/Categories/' + id)
                .then(response => response.json()) // JSON olarak dönüştür
                .then(item => {
                    console.log(item)
                    // Ekrandaki div elementini seç
                    document.getElementById('Id').value = item.id;
                    document.getElementById('Name').value = item.name;
                    document.getElementById('Description').value = item.description;
                    document.getElementById('IsActive').checked = item.isActive;
                    document.getElementById('ImageName').value = item.image;
                    document.getElementById("Image").innerHTML = "<img src='https://localhost:7116/Img/" + item.image + "' height='50' />"
                })
                .catch(error => {
                    // Hata olursa konsola yazdır
                    console.error(error);
                });
            document.getElementById("btnGuncelle").removeAttribute("disabled")
        }

        function Guncelle() {
            if (!document.getElementById('Name').value) {
                alert("Kategori Adı Boş Bırakılamaz!")
                return false;
            }
            var id = document.getElementById('Id').value;
            var resim = document.getElementById('ImageName').value;
            // file upload
            const formData = new FormData();
            const fileField = document.querySelector('input[type="file"]');

            //formData.append("username", "abc123");
            formData.append("formFile", fileField.files[0]);

            // console.log("fileField.files[0].name : ", fileField.files[0].name)
            // console.warn("formData.get('formFile') : ", formData.get("formFile").name)

            if (!id) {
                alert("Listeden Güncellenecek Kayıt Seçiniz!")
                return false;
            }

            if (fileField.files[0]) {
                resim = formData.get("formFile").name
            }

            fetch('https://localhost:7116/api/Categories/' + id, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    Id: parseInt(id),
                    Name: document.getElementById('Name').value,
                    IsActive: document.getElementById('IsActive').checked,
                    Description: document.getElementById('Description').value,
                    Image: resim // formData.get("formFile").name //document.getElementsByName('Image')[0].value
                })
            })
                .then((response) => { // api geriye json dönmüyorsa hata veriyor
                    if (response.ok) {
                        upload(formData);
                        location.reload()
                        // return response.json(); // Başarılı ise JSON verisini alın
                    } else {
                        throw new Error('İstek başarısız oldu.'); // Hata durumunda hata fırlatın
                    }
                })
                // .then((data) => {

                //     // console.log('İşlem başarılı:', data); // İşlem başarılıysa veriyi konsola yazdırın
                //     // GetAll();

                // })
                .catch((error) => {
                    console.error('Hata:', error); // Hata durumunda hata mesajını konsola yazdırın
                });

        }

        function Delete(id) {
            if (confirm('Öğrenciyi silmek istediğinize emin misiniz?')) {
                fetch('https://localhost:7116/api/Categories/' + id, {
                    method: 'DELETE',
                })
                    .then((data) => {
                        console.log('İşlem başarılı:', data); // İşlem başarılıysa veriyi konsola yazdırın
                        GetAll();
                    })
                    .catch((error) => {
                        console.error('Hata:', error); // Hata durumunda hata mesajını konsola yazdırın
                    });
            }
        }

        // file upload
        async function upload(formData) {
            try {
                const response = await fetch("https://localhost:7116/api/Upload", {
                    method: "POST",
                    body: formData,
                });
                const result = await response.json();
                console.log("Success:", result);
            } catch (error) {
                console.error("Error:", error);
            }
        }

    </script>
}