@inject IHttpContextAccessor _context

@{
    ViewData["Title"] = "Http Context Accessor";
}

<h1>Http Context Accessor</h1>

<p>
    Sunucu üzerinden birden fazla istemciye hizmet verecek şekilde tasarlanmış uygulama mimarilerinde her bir istek için benzersiz/tekil bir Context nesnesi üretilir. 
    Context üzerinden de istemci tarafından yapılan Request ile birlikte uygulamaya ve isteğe ait bazı bilgilere ulaşılabilir. Bununla birlikte framework bize, ilgili istek için üretilen Context nesnesi yaşadığı sürece saklanması gereken bilgilerinde tutulduğu koleksiyon sunmaktadır.
</p>

<p>
    HttpContextAccessor kullanabilmek için program.cs ye builder.Services.AddSingleton <code>< IHttpContextAccessor HttpContextAccessor >();</code> kodunu ekliyoruz.
</p>

<hr />

<h3>
    Controller da DI yaparak kullanabiliriz;
</h3>

<p>
    @Html.Raw(TempData["mesaj"])
</p>

<form>
    @Html.Editor("kelime")
</form>

<h3>IHttpContextAccessor ü inject ederek kullanma</h3>
<p>
    <hr />Controller Adı :
    @_context.HttpContext.GetRouteValue("Controller")
    <br />Action Adı :
    @_context.HttpContext.GetRouteValue("Action")
    <br />Id Değeri :
    @_context.HttpContext.GetRouteValue("id")
    <br />Request Method :
    @_context.HttpContext.Request.Method
    <br />Request Scheme :
    @_context.HttpContext.Request.Scheme
    <br />Request.Path :
    @_context.HttpContext.Request.Path.Value
    <br />Request.Host :
    @_context.HttpContext.Request.Host
    <br />QueryString :
    @_context.HttpContext.Request.QueryString
    <br />Query kelime:
    @_context.HttpContext.Request.Query["kelime"]
    <br /> Session değeri :
    @_context.HttpContext.Session.GetString("UserGuid")
    <br /> Cookie değeri :
    @_context.HttpContext.Request.Cookies["userguid"]
    <br /> Oturum açılmış mı? :
    @_context.HttpContext.User.Identity.IsAuthenticated
    <br /> Kullanıcı User Rolüne Sahip mi? :
    @_context.HttpContext.User.IsInRole("User")
</p>

<p>
    <hr />Controller Adı :
    @Context.GetRouteValue("Controller")
    <br />Action Adı :
    @Context.GetRouteValue("Action")
    <br />Id Değeri :
    @Context.GetRouteValue("id")
    <br />Request Method :
    @Context.Request.Method
    <br />Request Scheme :
    @Context.Request.Scheme
    <br />Request.Path :
    @Context.Request.Path.Value
    <br />Request.Host :
    @Context.Request.Host
    <br />QueryString :
    @Context.Request.QueryString
    <br />Query kelime:
    @Context.Request.Query["kelime"]
    <br /> Session değeri :
    @Context.Session.GetString("UserGuid")
    <br /> Cookie değeri :
    @Context.Request.Cookies["userguid"]
    <br /> Oturum açılmış mı? :
    @Context.User.Identity.IsAuthenticated
    <br /> Kullanıcı User Rolüne Sahip mi? :
    @Context.User.IsInRole("User")
</p>